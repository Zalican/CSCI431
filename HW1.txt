1. In CSCI 330 we described the cache of the CPU. What other caches exist in an Operating System? 
A: The main source of caching above the CPU at the Operating System level is main memory, backed up by solid state disk, backed up by magnetic disk.
  
2. What action must a multi-tasking Operating System perform before starting a process? 
A: An interrupt must be issue to the CPU for each process trying to complete a unit of work 
and the operating system must schedule, create, delete both user and system processes in order to spread the work out for each process.
What about a dedicated non-multitasking Operating System?
A: An interrupt must be issue to the CPU for each process but it will only work on one process at a time.  

3. How does kernel mode and user mode aid security?
A: A bit, called the mode bit, is added to the hardware of the computer to indicate the current mode: kernel (0) or user (1).  With the mode bit, we can distinguish between a task that is executed on behalf of the operating system and one that is executed on behalf of the user.  This aids in security by designating some of the machine instructions that may cause harm as privileged instructions. The hardware allows privileged instructions to be executed only in kernel mode. 

4. Describe some Operating System diﬀerences between workstations and mobile devices.
A: Mobile operating systems often run on hardware with smaller, slower, and less processing power found on workstations. Mobile OS also include middleware software frameworks used by application developers along with the kernel.

5. Which of the following should be a privileged operation?
(a) Set value of timer A: Yes - privileged
(b) Read the clock A: Not privileged
(c) Clear memory A: Yes - privileged
(d) Issue a trap instruction A: Not privileged
(e) Turn oﬀ interrupts A: Yes - privileged
(f) Modify entries in device-status table A: Yes - privileged
(g) Switch from user to kernel mode A: Not privileged
(h) Access I/O device A: Yes - privileged

6. Why do we have privilege and non-privileged execution?
A: The dual mode of operation provides us with the means for protecting the operating system from errant users and errant users from one another.

7. Describe the diﬀerences between symmetric and asymmetric multiprocessing. 
 A: With asymmetric multiprocessing, each processor is assigned a specific task. A boss processor controls the system and the other processors either look to the boss for instruction or have predefined tasks. With symmetric multiprocessing, each processor performs all tasks within the operating system. SMP means that all processors are peers and no boss–worker relationship exists between processors. 
What are three advantages and one disadvantage of multiprocessor systems?
A: Pros are - Increased throughput. By increasing the number of processors, we expect to get more work done in less time. Economy of scale. Multiprocessor systems can cost less than equivalent multiple single-processor systems, because they can share peripherals, mass storage, and power supplies. 
Increased reliability. If functions can be distributed properly among several processors, then the failure of one processor will not halt the system, only slow it down. 
Con is - Multiprocessors require more complex hardware and software.
	
8. What is the purpose of interrupts? 
A: Interrupts are used to tell the processor that something needs its attention which "interrupts" what the processor is executing. The processor has to keep track of what it was working on so it can come back to it later.
What are the diﬀerences between a trap and an interrupt? 
A: An interrupt is signal generated by hardware and traps are generate by user process / software.
Can traps be generated intentionally by a user program? If so, for what purpose?
A: Yes, a trap is an exception in a user process, such as divide by zero by zero or invalid memory access and it's a way to invoke a kernel routine


9. The issue of resource utilization shows up in diﬀerent forms in diﬀerent types of operating systems. 
List what resources must be managed carefully in the following settings:
(a) Mainframe or minicomputer systems 
A: Users are accessing the same computer through terminals and share resources. The operating system in such cases is designed to maximize resource utilization to assure that all available CPU time, memory, and I/O are used efficiently and that no individual user takes more than her fair share.
(b) Workstations connected to servers 
A: Users have dedicated resources at their disposal, but they also share resources such as networking and servers, including file, compute, and print servers. Therefore, their operating system is designed to 
compromise between individual usability and resource utilization.
(c) Handheld computers
A: Most mobile computers are standalone units for individual users. Quite often, they are connected to networks through cellular or other wireless technologies. Increasingly, these mobile devices are replacing desktop and laptop computers for people who are primarily interested in using computers for e-mail and web browsing. The user interface for mobile computers generally features a touch screen, 
where the user interacts with the system by pressing and swiping fingers across the screen rather than using a physical keyboard and mouse.

10. Direct memory access is used for high-speed I/O devices in order to avoid increasing the CPU’s execution load.
(a) How does the CPU interface with the device to coordinate the transfer? 
A: After the CPU sets up buffers, pointers, and counters for the I/O device, the device controller transfers an entire block of data directly to or from its own buffer storage to memory, with no intervention by the CPU.
(b) How does the CPU know when the memory operations are complete?
A: The device controller sends an interrupt to the CPU, but only one interrupt is generated per block.
(c) The CPU is allowed to execute other programs while the DMA controller is transferring data. Does this process interfere with the execution of the user programs? If so, describe what forms of interference are caused.
A: No, but the device controller sends an interrupt which can suspend a user process.